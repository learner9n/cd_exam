%{
#include <stdio.h>
%}

%%
"if" | "else" | "while" | "for" | "do" | "switch" | "goto" | "break" |
"case" | "const" | "float" | "double" | "int" | "long" | "short" |
"signed" | "unsigned" | "register" | "typedef" | "return" | "enum" |
"sizeof" | "static" | "struct" | "union" | "void" | "main" | "continue" |
"default" | "printf" | "scanf" { printf("%s is a keyword\n", yytext); }

[a-zA-Z_][a-zA-Z0-9_]* { printf("%s is an identifier\n", yytext); }

[0-9]+ { printf("%s is a number\n", yytext); }

[+/*%-] { printf("%s is an arithmetic operator\n", yytext); }

[<>=!]=? { printf("%s is a relational operator\n", yytext); }

"&&" | "||" | "!" { printf("%s is a logical operator\n", yytext); }

"&" | "~" | "|" | "^" | "<<" | ">>" { printf("%s is a bitwise operator\n", yytext); }

[,] { printf("%s is a separator\n", yytext); }

[;] { printf("%s is a terminator\n", yytext); }

[()] { printf("%s is a parenthesis\n", yytext); }

[{}] { printf("%s is a brace\n", yytext); }

[[]] { printf("%s is a square brace\n", yytext); }

"%d" | "%c" | "%s" | "%f" { printf("%s is a format specifier\n", yytext); }

"//".* { printf("%s is a line comment\n", yytext); }

"/*"([^*]|\*+[^/])*"*/" { printf("%s is a block comment\n", yytext); }

\"[^\"]*\" { printf("%s is a string\n", yytext); }

[@#$] { printf("%s is a special character\n", yytext); }

"\\n" { printf("%s is a new line character\n", yytext); }

"#include<stdio.h>" | "#include<stdbool.h>" | "#include<string.h>" | "#include<math.h>" 
{ printf("%s is a header file\n", yytext); }

%%

int main()
{
    yylex();
    return 0;
}

sudo apt-get update
sudo apt-get install flex bison
nano lexer.l
flex lexer.l
gcc lex.yy.c -o lexer -lfl
./lexer
input:-int main() {
    return 0;
}

